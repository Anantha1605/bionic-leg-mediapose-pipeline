import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from scipy.signal import savgol_filter 

def visualize_leg_angles(csv_file="output_angles.csv", smooth=False, method="savgol"):
    """
    Visualize leg joint angles from the CSV file generated by the detector.
    
    Parameters:
    - csv_file: Path to CSV file containing joint angle data
    - smooth: Whether to apply smoothing
    - method: "savgol" for Savitzky-Golay, "ma" for moving average
    """
    # Read CSV file
    df = pd.read_csv(csv_file)
    
    # Adjust angles so that 0° corresponds to standing straight
    for col in [
        'right_hip_angle', 'right_knee_angle', 'right_ankle_angle',
        'left_hip_angle', 'left_knee_angle', 'left_ankle_angle'
    ]:
        df[col] = 180 - df[col]

    # Drop rows with all NaN angle values
    df = df.dropna(subset=[
        'right_hip_angle', 'right_knee_angle', 'right_ankle_angle',
        'left_hip_angle', 'left_knee_angle', 'left_ankle_angle'
    ], how='all')
    
    frames = df['frame']

    # --- Define both smoothing options ---
    def moving_average(series, window_size=5):
        return np.convolve(series, np.ones(window_size)/window_size, mode='same')

    def savgol_smooth(series, window_length=21, polyorder=3): # window_length = 21 if 60 fps, 11 if 30 fps
        # Ensure window length is odd and smaller than data length
        if len(series) < window_length:
            window_length = len(series) - 1 if len(series) % 2 == 0 else len(series)
        return savgol_filter(series, window_length=window_length, polyorder=polyorder)
    
    # Create subplots for right and left legs
    fig, axs = plt.subplots(2, 1, figsize=(12, 8), sharex=True)
    fig.suptitle("Leg Joint Angle Variation Over Time (Smoothened using Savitzky-Golay Filter)", fontsize=16, weight='bold')
    
    # --- Right leg ---
    right_angles = {
        "Hip": df["right_hip_angle"],
        "Knee": df["right_knee_angle"],
        "Ankle": df["right_ankle_angle"]
    }
    
    for joint, data in right_angles.items():
        if smooth:
            if method == "savgol":
                data = savgol_smooth(data)
            elif method == "ma":
                data = moving_average(data)
        axs[0].plot(frames, data, label=f"Right {joint}")
    
    axs[0].set_title("Right Leg Angles")
    axs[0].set_ylabel("Angle (°)")
    axs[0].legend()
    axs[0].grid(True, linestyle='--', alpha=0.6)
    
    # --- Left leg ---
    left_angles = {
        "Hip": df["left_hip_angle"],
        "Knee": df["left_knee_angle"],
        "Ankle": df["left_ankle_angle"]
    }
    
    for joint, data in left_angles.items():
        if smooth:
            if method == "savgol":
                data = savgol_smooth(data)
            elif method == "ma":
                data = moving_average(data)
        axs[1].plot(frames, data, label=f"Left {joint}")
    
    axs[1].set_title("Left Leg Angles")
    axs[1].set_xlabel("Frame Number")
    axs[1].set_ylabel("Angle (°)")
    axs[1].legend()
    axs[1].grid(True, linestyle='--', alpha=0.6)
    
    plt.tight_layout(rect=[0, 0, 1, 0.97])
    plt.show()

if __name__ == "__main__":
    #visualize_leg_angles("output_angles.csv", smooth=True, method="ma")
    visualize_leg_angles("output_angles.csv", smooth=True, method="savgol")

